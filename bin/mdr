#!/bin/bash

INSTALL_DIR="/usr/local"
CACHE_DIR="/var/cache/dmr"
LOG_FILE="/var/log/dmr.log"

SLOT_SYMBOLS=("$" "%" "#" "*")
SPIN_DELAY=0.1
RESULT_DELAY=0.5

init_dirs() {
    sudo mkdir -p "$CACHE_DIR" 2>/dev/null
    sudo touch "$LOG_FILE" 2>/dev/null
    sudo chown -R $(whoami) "$CACHE_DIR" 2>/dev/null
    sudo chmod 666 "$LOG_FILE" 2>/dev/null
}

clear_slot_area() {
    tput cuu 6 2>/dev/null
    tput ed 2>/dev/null
}

show_slots() {
    clear_slot_area
    printf "\n  .-------. .-------. .-------.\n"
    printf "  |       | |       | |       |\n"
    printf "  |   %s   | |   %s   | |   %s   |\n" "$1" "$2" "$3"
    printf "  |       | |       | |       |\n"
    printf "  '-------' '-------' '-------'\n"
}

slot_animation() {
    local pid=$1
    
    while kill -0 "$pid" 2>/dev/null; do
        if [ $((RANDOM % 5)) -eq 0 ]; then
            symbol="${SLOT_SYMBOLS[$((RANDOM % ${#SLOT_SYMBOLS[@]}))]}"
            symbols=("$symbol" "$symbol" "$symbol")
        else
            symbols=(
                "${SLOT_SYMBOLS[$((RANDOM % ${#SLOT_SYMBOLS[@]}))]}"
                "${SLOT_SYMBOLS[$((RANDOM % ${#SLOT_SYMBOLS[@]}))]}"
                "${SLOT_SYMBOLS[$((RANDOM % ${#SLOT_SYMBOLS[@]}))]}"
            )
        fi
        
        show_slots "${symbols[@]}"
        sleep "$SPIN_DELAY"
    done
    
    show_slots "${symbols[@]}"
    sleep "$RESULT_DELAY"
    clear_slot_area
}

progress_bar() {
    local width=30
    local percent=0
    
    while read -r line; do
        if [[ $line =~ ([0-9]+)% ]]; then
            percent=${BASH_REMATCH[1]}
            filled=$((width * percent / 100))
            printf "\r["
            printf "%${filled}s" | tr ' ' '#'
            printf "%$((width-filled))s" | tr ' ' '-'
            printf "] %d%%" "$percent"
        fi
    done
    printf "\n"
}

install_package() {
    case "$1" in
        python3)
            echo "python.org"
            if ! curl -L https://www.python.org/ftp/python/3.10.6/Python-3.10.6.tgz | tar -xz; then
                return 1
            fi
            cd Python-3.10.6 || return 1
            ./configure --prefix="$INSTALL_DIR"
            make
            sudo make install
            cd .. || return 1
            rm -rf Python-3.10.6
            ;;
        mc)
            echo ""
            if ! curl -L https://github.com/MidnightCommander/mc/archive/refs/tags/4.8.28.tar.gz | tar -xz; then
                return 1
            fi
            cd mc-4.8.28 || return 1
            ./autogen.sh
            ./configure --prefix="$INSTALL_DIR"
            make
            sudo make install
            cd .. || return 1
            rm -rf mc-4.8.28
            ;;
        *)
            echo "Unknown package: $1"
            return 1
            ;;
    esac
}

download_package() {
    local pkg="$1"
    
    if ! init_dirs; then
        echo "Error: Check permissions"
        return 1
    fi
    
    if grep -q "^$pkg$" "$CACHE_DIR/installed.txt" 2>/dev/null; then
        echo "$pkg already installed"
        return 0
    fi
    
    echo "Starting installation of $pkg..."
    
    (install_package "$pkg" 2>&1 | progress_bar) &
    install_pid=$!
    
    slot_animation "$install_pid" &
    slot_pid=$!
    
    if wait "$install_pid"; then
        kill "$slot_pid" 2>/dev/null
        echo "$pkg" | sudo tee -a "$CACHE_DIR/installed.txt" >/dev/null
        echo "Package $pkg installed successfully!"
    else
        kill "$slot_pid" 2>/dev/null
        echo "Failed to install $pkg"
        return 1
    fi
}

case "$1" in
    download)
        [ -z "$2" ] && echo "Usage: dmr download <package>" && exit 1
        download_package "$2"
        ;;
    list)
        echo "Available packages:"
        echo "  python3 - Python interpreter"
        echo "  mc      - Midnight Commander"
        ;;
    *)
        echo "DMR Package Manager"
        echo "Commands:"
        echo "  download <package>"
        echo "  list"
        ;;
esac
